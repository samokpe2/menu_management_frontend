{"ast":null,"code":"var _jsxFileName = \"/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuList.tsx\";\nimport React from 'react';\nimport MenuItem from './MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buildMenuTree = items => {\n  const map = {};\n  const roots = [];\n\n  // Initialize the map with each item and an empty children array\n  items.forEach(item => {\n    map[item.id] = {\n      ...item,\n      children: []\n    }; // Initialize children array\n  });\n\n  // Build the tree structure\n  items.forEach(item => {\n    if (item.parent_id) {\n      // If item has a parent, push it into the parent's children array\n      map[item.parent_id].children.push(map[item.id]);\n    } else {\n      // If item is a root, push it into the roots array\n      roots.push(map[item.id]);\n    }\n  });\n  return roots; // Return the top-level items\n};\nconst MenuList = ({\n  items,\n  onAdd,\n  expandedItems,\n  onToggleExpand\n}) => {\n  const treeItems = buildTree(items);\n  const renderItems = items => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl-4\",\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        item: item,\n        onAdd: () => onAdd(item),\n        onToggleExpand: () => onToggleExpand(item.id),\n        isExpanded: expandedItems[item.id] || false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), expandedItems[item.id] && item.children.length > 0 && renderItems(item.children)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: renderItems(treeItems)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["React","MenuItem","jsxDEV","_jsxDEV","buildMenuTree","items","map","roots","forEach","item","id","children","parent_id","push","MenuList","onAdd","expandedItems","onToggleExpand","treeItems","buildTree","renderItems","className","isExpanded","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuList.tsx"],"sourcesContent":["import React from 'react';\nimport MenuItem from './MenuItem';\nimport { MenuItem as MenuItemType } from '../../hooks/apiHooks';\n\ninterface MenuListProps {\n  items: MenuItemType[];\n  onAdd: (item: MenuItemType) => void;\n  expandedItems: { [key: string]: boolean };\n  onToggleExpand: (id: string) => void;\n}\n\nconst buildMenuTree = (items) => {\n    const map = {};\n    const roots = [];\n\n    // Initialize the map with each item and an empty children array\n    items.forEach(item => {\n        map[item.id] = { ...item, children: [] }; // Initialize children array\n    });\n\n    // Build the tree structure\n    items.forEach(item => {\n        if (item.parent_id) {\n            // If item has a parent, push it into the parent's children array\n            map[item.parent_id].children.push(map[item.id]);\n        } else {\n            // If item is a root, push it into the roots array\n            roots.push(map[item.id]);\n        }\n    });\n\n    return roots; // Return the top-level items\n};\n\n\nconst MenuList: React.FC<MenuListProps> = ({ items, onAdd, expandedItems, onToggleExpand }) => {\n  const treeItems = buildTree(items);\n\n  const renderItems = (items: MenuItemType[]) => {\n    return items.map((item) => (\n      <div key={item.id} className=\"pl-4\">\n        <MenuItem\n          item={item}\n          onAdd={() => onAdd(item)}\n          onToggleExpand={() => onToggleExpand(item.id)}\n          isExpanded={expandedItems[item.id] || false}\n        />\n        {expandedItems[item.id] && item.children.length > 0 && renderItems(item.children)}\n      </div>\n    ));\n  };\n\n  return <div className=\"space-y-2\">{renderItems(treeItems)}</div>;\n};\n\nexport default MenuList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC7B,MAAMC,GAAG,GAAG,CAAC,CAAC;EACd,MAAMC,KAAK,GAAG,EAAE;;EAEhB;EACAF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;IAClBH,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,GAAG;MAAE,GAAGD,IAAI;MAAEE,QAAQ,EAAE;IAAG,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;;EAEF;EACAN,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;IAClB,IAAIA,IAAI,CAACG,SAAS,EAAE;MAChB;MACAN,GAAG,CAACG,IAAI,CAACG,SAAS,CAAC,CAACD,QAAQ,CAACE,IAAI,CAACP,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC;IACnD,CAAC,MAAM;MACH;MACAH,KAAK,CAACM,IAAI,CAACP,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC;IAC5B;EACJ,CAAC,CAAC;EAEF,OAAOH,KAAK,CAAC,CAAC;AAClB,CAAC;AAGD,MAAMO,QAAiC,GAAGA,CAAC;EAAET,KAAK;EAAEU,KAAK;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EAC7F,MAAMC,SAAS,GAAGC,SAAS,CAACd,KAAK,CAAC;EAElC,MAAMe,WAAW,GAAIf,KAAqB,IAAK;IAC7C,OAAOA,KAAK,CAACC,GAAG,CAAEG,IAAI,iBACpBN,OAAA;MAAmBkB,SAAS,EAAC,MAAM;MAAAV,QAAA,gBACjCR,OAAA,CAACF,QAAQ;QACPQ,IAAI,EAAEA,IAAK;QACXM,KAAK,EAAEA,CAAA,KAAMA,KAAK,CAACN,IAAI,CAAE;QACzBQ,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACR,IAAI,CAACC,EAAE,CAAE;QAC9CY,UAAU,EAAEN,aAAa,CAACP,IAAI,CAACC,EAAE,CAAC,IAAI;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EACDV,aAAa,CAACP,IAAI,CAACC,EAAE,CAAC,IAAID,IAAI,CAACE,QAAQ,CAACgB,MAAM,GAAG,CAAC,IAAIP,WAAW,CAACX,IAAI,CAACE,QAAQ,CAAC;IAAA,GAPzEF,IAAI,CAACC,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN,CAAC;EACJ,CAAC;EAED,oBAAOvB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAV,QAAA,EAAES,WAAW,CAACF,SAAS;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClE,CAAC;AAACE,EAAA,GAlBId,QAAiC;AAoBvC,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}