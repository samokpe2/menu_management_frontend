{"ast":null,"code":"var _jsxFileName = \"/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import Button from '../atoms/Button';\n\nimport ChevronIcon from '../atoms/ChevronIcon';\n\n// interface MenuItemProps {\n//   item: MenuItemType;\n//   onAdd: () => void;\n//   onToggleExpand: () => void;\n//   isExpanded: boolean;\n// }\n\n// const MenuItem: React.FC<MenuItemProps> = ({ item, onAdd, onToggleExpand, isExpanded }) => {\n//   const [isHovered, setIsHovered] = useState<boolean>(false);\n\n//   return (\n//     <div\n//       className=\"flex items-center justify-between pl-4\"\n//       onMouseEnter={() => setIsHovered(true)}\n//       onMouseLeave={() => setIsHovered(false)}\n//     >\n//       <div className=\"flex items-center\">\n//         {item.position > 0 && <span className=\"mr-2\">{'—'.repeat(item.position)}</span>}\n//         <span onClick={onToggleExpand} className=\"cursor-pointer\">\n//           {isExpanded ? '-' : '+'} {item.name}\n//         </span>\n//       </div>\n//       {isHovered && (\n//         <Button onClick={onAdd} className=\"ml-2\" backgroundColor='transparent'>\n//           +\n//         </Button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MenuItem;\n\n// import React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuItem = ({\n  item,\n  onAdd,\n  onToggleExpand,\n  isExpanded\n}) => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center relative\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: [item.parent_id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-4 h-px bg-gray-300 mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onToggleExpand,\n      className: \"cursor-pointer mr-2\",\n      children: item.children && item.children.length > 0 && /*#__PURE__*/_jsxDEV(ChevronIcon, {\n        isExpanded: isExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), \")}\", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-[400] text-[14px] leading-[14px] mt-4\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isHovered && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      className: \"ml-2 p-1 bg-blue-500 text-white rounded hover:bg-blue-600\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuItem, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = MenuItem;\nexport default MenuItem;\nvar _c;\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"names":["React","useState","ChevronIcon","jsxDEV","_jsxDEV","MenuItem","item","onAdd","onToggleExpand","isExpanded","_s","isHovered","setIsHovered","className","onMouseEnter","onMouseLeave","children","parent_id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","name","_c","$RefreshReg$"],"sources":["/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuItem.tsx"],"sourcesContent":["import React, { useState } from 'react';\n// import Button from '../atoms/Button';\nimport { MenuItem as MenuItemType } from '../../hooks/apiHooks';\nimport ChevronIcon from '../atoms/ChevronIcon';\n\n// interface MenuItemProps {\n//   item: MenuItemType;\n//   onAdd: () => void;\n//   onToggleExpand: () => void;\n//   isExpanded: boolean;\n// }\n\n// const MenuItem: React.FC<MenuItemProps> = ({ item, onAdd, onToggleExpand, isExpanded }) => {\n//   const [isHovered, setIsHovered] = useState<boolean>(false);\n\n//   return (\n//     <div\n//       className=\"flex items-center justify-between pl-4\"\n//       onMouseEnter={() => setIsHovered(true)}\n//       onMouseLeave={() => setIsHovered(false)}\n//     >\n//       <div className=\"flex items-center\">\n//         {item.position > 0 && <span className=\"mr-2\">{'—'.repeat(item.position)}</span>}\n//         <span onClick={onToggleExpand} className=\"cursor-pointer\">\n//           {isExpanded ? '-' : '+'} {item.name}\n//         </span>\n//       </div>\n//       {isHovered && (\n//         <Button onClick={onAdd} className=\"ml-2\" backgroundColor='transparent'>\n//           +\n//         </Button>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MenuItem;\n\n\n// import React from 'react';\n\ninterface MenuItemProps {\n  item: MenuItemType;\n  onAdd: () => void;\n  onToggleExpand: () => void;\n  isExpanded: boolean;\n}\n\nconst MenuItem: React.FC<MenuItemProps> = ({ item, onAdd, onToggleExpand, isExpanded }) => {\n    const [isHovered, setIsHovered] = useState<boolean>(false);\n\n  return (\n    <div className=\"flex items-center relative\" onMouseEnter={() => setIsHovered(true)}\n    onMouseLeave={() => setIsHovered(false)}>\n\n{item.parent_id && (\n        <div className=\"w-4 h-px bg-gray-300 mt-4\"></div>\n      )}\n      {/* Chevron Icon */}\n      \n        <div onClick={onToggleExpand} className=\"cursor-pointer mr-2\">\n        {item.children && item.children.length > 0 && (\n          <ChevronIcon isExpanded={isExpanded} />\n        )}\n        </div>\n      )}\n\n      {/* Menu Item Name */}\n      <span className=\"font-[400] text-[14px] leading-[14px] mt-4\" >{item.name}</span>\n\n      {/* Add Button */}\n      {isHovered && (\n      <button\n        onClick={onAdd}\n        className=\"ml-2 p-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n      >\n        +\n      </button>\n      )}\n\n      {/* Vertical Line for Child Items */}\n      {/* {item.children && item.children.length > 0 && (\n        <div className=\"absolute left-0 top-full w-px h-4 bg-gray-300\"></div>\n      )} */}\n    </div>\n  );\n};\n\nexport default MenuItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;;AAEA,OAAOC,WAAW,MAAM,sBAAsB;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,cAAc;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACvF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAE5D,oBACEG,OAAA;IAAKS,SAAS,EAAC,4BAA4B;IAACC,YAAY,EAAEA,CAAA,KAAMF,YAAY,CAAC,IAAI,CAAE;IACnFG,YAAY,EAAEA,CAAA,KAAMH,YAAY,CAAC,KAAK,CAAE;IAAAI,QAAA,GAE3CV,IAAI,CAACW,SAAS,iBACPb,OAAA;MAAKS,SAAS,EAAC;IAA2B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACjD,eAGCjB,OAAA;MAAKkB,OAAO,EAAEd,cAAe;MAACK,SAAS,EAAC,qBAAqB;MAAAG,QAAA,EAC5DV,IAAI,CAACU,QAAQ,IAAIV,IAAI,CAACU,QAAQ,CAACO,MAAM,GAAG,CAAC,iBACxCnB,OAAA,CAACF,WAAW;QAACO,UAAU,EAAEA;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,MAGR,eACAjB,OAAA;MAAMS,SAAS,EAAC,4CAA4C;MAAAG,QAAA,EAAGV,IAAI,CAACkB;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAG/EV,SAAS,iBACVP,OAAA;MACEkB,OAAO,EAAEf,KAAM;MACfM,SAAS,EAAC,2DAA2D;MAAAG,QAAA,EACtE;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAME,CAAC;AAEV,CAAC;AAACX,EAAA,CAtCIL,QAAiC;AAAAoB,EAAA,GAAjCpB,QAAiC;AAwCvC,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}