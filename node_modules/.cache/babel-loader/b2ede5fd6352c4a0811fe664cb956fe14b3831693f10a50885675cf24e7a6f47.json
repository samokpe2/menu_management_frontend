{"ast":null,"code":"var _jsxFileName = \"/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuList.tsx\";\nimport React from 'react';\nimport MenuItem from './MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuList = ({\n  items,\n  onAdd,\n  expandedItems,\n  onToggleExpand\n}) => {\n  const buildMenuTree = items => {\n    const map = {};\n    const roots = [];\n\n    // Initialize the map with each item and an empty children array\n    items.forEach(item => {\n      map[item.id] = {\n        ...item,\n        children: []\n      }; // Initialize children array\n    });\n\n    // Build the tree structure\n    items.forEach(item => {\n      if (item.parent_id) {\n        var _map$item$parent_id, _map$item$parent_id$c;\n        // If item has a parent, push it into the parent's children array\n        (_map$item$parent_id = map[item.parent_id]) === null || _map$item$parent_id === void 0 ? void 0 : (_map$item$parent_id$c = _map$item$parent_id.children) === null || _map$item$parent_id$c === void 0 ? void 0 : _map$item$parent_id$c.push(map[item.id]);\n      } else {\n        // If item is a root, push it into the roots array\n        roots.push(map[item.id]);\n      }\n    });\n    return roots; // Return the top-level items\n  };\n  const menuTree = buildMenuTree(items);\n  const renderItems = items => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl-4\",\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        item: item,\n        onAdd: () => onAdd(item),\n        onToggleExpand: () => onToggleExpand(item.id),\n        isExpanded: expandedItems[item.id] || false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), expandedItems[item.id] && item.children && item.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderItems(item.children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: renderItems(menuTree)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["React","MenuItem","jsxDEV","_jsxDEV","MenuList","items","onAdd","expandedItems","onToggleExpand","buildMenuTree","map","roots","forEach","item","id","children","parent_id","_map$item$parent_id","_map$item$parent_id$c","push","menuTree","renderItems","className","isExpanded","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuList.tsx"],"sourcesContent":["\n  \n  import React from 'react';\n  import MenuItem from './MenuItem';\n  \n  interface MenuListProps {\n    items: MenuItemType[];\n    onAdd: (item: MenuItemType) => void;\n    expandedItems: { [key: string]: boolean };\n    onToggleExpand: (id: string) => void;\n  }\n  \n  const MenuList: React.FC<MenuListProps> = ({ items, onAdd, expandedItems, onToggleExpand }) => {\n    const buildMenuTree = (items: MenuItemType[]): MenuItemType[] => {\n        const map: { [key: string]: MenuItemType } = {};\n        const roots: MenuItemType[] = [];\n      \n        // Initialize the map with each item and an empty children array\n        items.forEach(item => {\n          map[item.id] = { ...item, children: [] }; // Initialize children array\n        });\n      \n        // Build the tree structure\n        items.forEach(item => {\n          if (item.parent_id) {\n            // If item has a parent, push it into the parent's children array\n            map[item.parent_id]?.children?.push(map[item.id]);\n          } else {\n            // If item is a root, push it into the roots array\n            roots.push(map[item.id]);\n          }\n        });\n      \n        return roots; // Return the top-level items\n      };\n      \n    const menuTree = buildMenuTree(items);\n  \n    const renderItems = (items: MenuItemType[]) => {\n      return items.map((item) => (\n        <div key={item.id} className=\"pl-4\">\n          <MenuItem\n            item={item}\n            onAdd={() => onAdd(item)}\n            onToggleExpand={() => onToggleExpand(item.id)}\n            isExpanded={expandedItems[item.id] || false}\n          />\n          {expandedItems[item.id] && item.children && item.children.length > 0 && (\n            <div>{renderItems(item.children)}</div>\n          )}\n        </div>\n      ));\n    };\n  \n    return <div className=\"space-y-2\">{renderItems(menuTree)}</div>;\n  };\n  \n  export default MenuList;\n  "],"mappings":";AAEE,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASlC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EAC7F,MAAMC,aAAa,GAAIJ,KAAqB,IAAqB;IAC7D,MAAMK,GAAoC,GAAG,CAAC,CAAC;IAC/C,MAAMC,KAAqB,GAAG,EAAE;;IAEhC;IACAN,KAAK,CAACO,OAAO,CAACC,IAAI,IAAI;MACpBH,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,GAAG;QAAE,GAAGD,IAAI;QAAEE,QAAQ,EAAE;MAAG,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;;IAEF;IACAV,KAAK,CAACO,OAAO,CAACC,IAAI,IAAI;MACpB,IAAIA,IAAI,CAACG,SAAS,EAAE;QAAA,IAAAC,mBAAA,EAAAC,qBAAA;QAClB;QACA,CAAAD,mBAAA,GAAAP,GAAG,CAACG,IAAI,CAACG,SAAS,CAAC,cAAAC,mBAAA,wBAAAC,qBAAA,GAAnBD,mBAAA,CAAqBF,QAAQ,cAAAG,qBAAA,uBAA7BA,qBAAA,CAA+BC,IAAI,CAACT,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC;MACnD,CAAC,MAAM;QACL;QACAH,KAAK,CAACQ,IAAI,CAACT,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC;IAEF,OAAOH,KAAK,CAAC,CAAC;EAChB,CAAC;EAEH,MAAMS,QAAQ,GAAGX,aAAa,CAACJ,KAAK,CAAC;EAErC,MAAMgB,WAAW,GAAIhB,KAAqB,IAAK;IAC7C,OAAOA,KAAK,CAACK,GAAG,CAAEG,IAAI,iBACpBV,OAAA;MAAmBmB,SAAS,EAAC,MAAM;MAAAP,QAAA,gBACjCZ,OAAA,CAACF,QAAQ;QACPY,IAAI,EAAEA,IAAK;QACXP,KAAK,EAAEA,CAAA,KAAMA,KAAK,CAACO,IAAI,CAAE;QACzBL,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACK,IAAI,CAACC,EAAE,CAAE;QAC9CS,UAAU,EAAEhB,aAAa,CAACM,IAAI,CAACC,EAAE,CAAC,IAAI;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EACDpB,aAAa,CAACM,IAAI,CAACC,EAAE,CAAC,IAAID,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACE,QAAQ,CAACa,MAAM,GAAG,CAAC,iBAClEzB,OAAA;QAAAY,QAAA,EAAMM,WAAW,CAACR,IAAI,CAACE,QAAQ;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACvC;IAAA,GATOd,IAAI,CAACC,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUZ,CACN,CAAC;EACJ,CAAC;EAED,oBAAOxB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAP,QAAA,EAAEM,WAAW,CAACD,QAAQ;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjE,CAAC;AAACE,EAAA,GA3CIzB,QAAiC;AA6CvC,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}