{"ast":null,"code":"var _jsxFileName = \"/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/organisms/MenusSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../atoms/Button';\nimport Select from '../atoms/Select';\nimport MenuList from '../molecules/MenuList';\nimport { useMenus, useAddMenu } from '../../hooks/apiHooks';\nimport AddMenuForm from './AddMenuForm';\nimport Label from '../atoms/Label';\nimport Modal from '../molecules/Modal';\nimport Input from '../atoms/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenusSection = () => {\n  _s();\n  const {\n    data: menus\n  } = useMenus();\n  const [selectedMenu, setSelectedMenu] = useState('');\n  const [menuItems, setMenuItems] = useState([]);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [menuName, setMenuName] = useState('');\n\n  // Using the updated useAddMenu hook\n  const {\n    mutate: addMenu,\n    isLoading,\n    isError,\n    isSuccess,\n    error\n  } = useAddMenu();\n  const handleExpandCollapse = expand => {\n    setIsExpanded(expand);\n    // Logic to expand/collapse the menu items\n  };\n  const handleCreateMenu = () => {\n    if (menuName.trim()) {\n      addMenu({\n        name: menuName\n      });\n      setMenuName(''); // Reset the input field after submission\n      setIsModalOpen(false); // Close the modal on submission\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedMenu,\n        onChange: e => setSelectedMenu(e.target.value),\n        options: (menus === null || menus === void 0 ? void 0 : menus.map(menu => ({\n          label: menu.name,\n          value: menu.id\n        }))) || [],\n        className: \"max-md:w-full w-[50%] mb-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col lg:flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:w-[50%]\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleExpandCollapse(true),\n            backgroundColor: \"#1D2939\",\n            className: \"text-white mr-2 px-[32px] py-[12px]\",\n            children: \"Expand All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleExpandCollapse(false),\n            backgroundColor: \"transparent\",\n            className: \"border-[#D0D5DD] border-[1px] px-[32px] py-[12px]\",\n            children: \"Collapse All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n            items: menuItems,\n            onAdd: id => {/* Logic to show add form */}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setIsModalOpen(true),\n            backgroundColor: \"#253BFF\",\n            className: \"text-white mr-2 px-[32px] py-[14px] mt-4\",\n            children: \"Create Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:w-[50%] mt-4 lg:mt-0\",\n          children: /*#__PURE__*/_jsxDEV(AddMenuForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"Menu Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: menuName,\n        onChange: e => setMenuName(e.target.value),\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Creating menu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: [\"Error: \", error === null || error === void 0 ? void 0 : error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500\",\n        children: \"Menu created successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateMenu,\n        backgroundColor: \"#253BFF\",\n        className: \"text-white mt-4 w-full px-[32px] py-[14px]\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MenusSection, \"P3RAt+fqjtHeql0yW59tYhwhntA=\", false, function () {\n  return [useMenus, useAddMenu];\n});\n_c = MenusSection;\nexport default MenusSection;\nvar _c;\n$RefreshReg$(_c, \"MenusSection\");","map":{"version":3,"names":["React","useState","Button","Select","MenuList","useMenus","useAddMenu","AddMenuForm","Label","Modal","Input","jsxDEV","_jsxDEV","MenusSection","_s","data","menus","selectedMenu","setSelectedMenu","menuItems","setMenuItems","isExpanded","setIsExpanded","isModalOpen","setIsModalOpen","menuName","setMenuName","mutate","addMenu","isLoading","isError","isSuccess","error","handleExpandCollapse","expand","handleCreateMenu","trim","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","options","map","menu","label","id","onClick","backgroundColor","items","onAdd","isOpen","onClose","message","_c","$RefreshReg$"],"sources":["/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/organisms/MenusSection.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '../atoms/Button';\nimport Select from '../atoms/Select';\nimport MenuList from '../molecules/MenuList';\nimport { useMenus, useAddMenu, MenuItem as MenuItemType } from '../../hooks/apiHooks';\nimport AddMenuForm from './AddMenuForm';\nimport Label from '../atoms/Label';\nimport Modal from '../molecules/Modal';\nimport Input from '../atoms/Input';\n\nconst MenusSection: React.FC = () => {\n  const { data: menus } = useMenus();\n  const [selectedMenu, setSelectedMenu] = useState<string>('');\n  const [menuItems, setMenuItems] = useState<MenuItemType[]>([]);\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [menuName, setMenuName] = useState<string>('');\n\n  // Using the updated useAddMenu hook\n  const { mutate: addMenu, isLoading, isError, isSuccess, error } = useAddMenu();\n\n  const handleExpandCollapse = (expand: boolean) => {\n    setIsExpanded(expand);\n    // Logic to expand/collapse the menu items\n  };\n\n  const handleCreateMenu = () => {\n    if (menuName.trim()) {\n      addMenu({ name: menuName });\n      setMenuName(''); // Reset the input field after submission\n      setIsModalOpen(false); // Close the modal on submission\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col p-4\">\n      <div className=\"flex flex-col mt-4\">\n        <Label>Menu</Label>\n        <Select\n          value={selectedMenu}\n          onChange={(e) => setSelectedMenu(e.target.value)}\n          options={menus?.map((menu) => ({ label: menu.name, value: menu.id })) || []}\n          className=\"max-md:w-full w-[50%] mb-5\"\n        />\n        <div className=\"flex flex-col lg:flex-row\">\n          <div className=\"lg:w-[50%]\">\n            <Button\n              onClick={() => handleExpandCollapse(true)}\n              backgroundColor='#1D2939'\n              className='text-white mr-2 px-[32px] py-[12px]'\n            >\n              Expand All\n            </Button>\n            <Button\n              onClick={() => handleExpandCollapse(false)}\n              backgroundColor='transparent'\n              className='border-[#D0D5DD] border-[1px] px-[32px] py-[12px]'\n            >\n              Collapse All\n            </Button>\n            <MenuList items={menuItems} onAdd={(id) => {/* Logic to show add form */}} />\n            <Button\n              onClick={() => setIsModalOpen(true)}\n              backgroundColor='#253BFF'\n              className='text-white mr-2 px-[32px] py-[14px] mt-4'\n            >\n              Create Menu\n            </Button>\n          </div>\n          <div className=\"lg:w-[50%] mt-4 lg:mt-0\">\n            <AddMenuForm />\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <Label>Menu Name</Label>\n        <Input\n          value={menuName}\n          onChange={(e) => setMenuName(e.target.value)}\n          className='w-full'\n        />\n        {isLoading && <p>Creating menu...</p>}\n        {isError && <p className=\"text-red-500\">Error: {error?.message}</p>}\n        {isSuccess && <p className=\"text-green-500\">Menu created successfully!</p>}\n        <Button\n          onClick={handleCreateMenu}\n          backgroundColor='#253BFF'\n          className='text-white mt-4 w-full px-[32px] py-[14px]'\n        >\n          Submit\n        </Button>\n      </Modal>\n    </div>\n  );\n};\n\nexport default MenusSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}