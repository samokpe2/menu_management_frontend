{"ast":null,"code":"var _jsxFileName = \"/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuList.tsx\";\nimport React from 'react';\nimport MenuItem from './MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Function to build a tree structure from flat list\nconst buildTree = items => {\n  const map = {};\n  const roots = [];\n  items.forEach(item => {\n    map[item.id] = {\n      ...item,\n      children: []\n    };\n  });\n  items.forEach(item => {\n    if (item.parent_id) {\n      map[item.parent_id].children.push(map[item.id]);\n    } else {\n      roots.push(map[item.id]);\n    }\n  });\n  return roots;\n};\nconst MenuList = ({\n  items,\n  onAdd,\n  expandedItems,\n  onToggleExpand\n}) => {\n  const treeItems = buildTree(items);\n  const renderItems = items => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl-4\",\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        item: item,\n        onAdd: () => onAdd(item),\n        onToggleExpand: () => onToggleExpand(item.id),\n        isExpanded: expandedItems[item.id] || false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), expandedItems[item.id] && item.children.length > 0 && renderItems(item.children)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: renderItems(treeItems)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["React","MenuItem","jsxDEV","_jsxDEV","buildTree","items","map","roots","forEach","item","id","children","parent_id","push","MenuList","onAdd","expandedItems","onToggleExpand","treeItems","renderItems","className","isExpanded","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/samuelokpe/Documents/GitHub/menu-management-system/src/components/molecules/MenuList.tsx"],"sourcesContent":["import React from 'react';\nimport MenuItem from './MenuItem';\nimport { MenuItem as MenuItemType } from '../../hooks/apiHooks';\n\ninterface MenuListProps {\n  items: MenuItemType[];\n  onAdd: (item: MenuItemType) => void;\n  expandedItems: { [key: string]: boolean };\n  onToggleExpand: (id: string) => void;\n}\n\n// Function to build a tree structure from flat list\nconst buildTree = (items: MenuItemType[]): MenuItemType[] => {\n  const map: { [key: string]: MenuItemType & { children: MenuItemType[] } } = {};\n  const roots: MenuItemType[] = [];\n\n  items.forEach(item => {\n    map[item.id] = { ...item, children: [] };\n  });\n\n  items.forEach(item => {\n    if (item.parent_id) {\n      map[item.parent_id].children.push(map[item.id]);\n    } else {\n      roots.push(map[item.id]);\n    }\n  });\n\n  return roots;\n};\n\nconst MenuList: React.FC<MenuListProps> = ({ items, onAdd, expandedItems, onToggleExpand }) => {\n  const treeItems = buildTree(items);\n\n  const renderItems = (items: MenuItemType[]) => {\n    return items.map((item) => (\n      <div key={item.id} className=\"pl-4\">\n        <MenuItem\n          item={item}\n          onAdd={() => onAdd(item)}\n          onToggleExpand={() => onToggleExpand(item.id)}\n          isExpanded={expandedItems[item.id] || false}\n        />\n        {expandedItems[item.id] && item.children.length > 0 && renderItems(item.children)}\n      </div>\n    ));\n  };\n\n  return <div className=\"space-y-2\">{renderItems(treeItems)}</div>;\n};\n\nexport default MenuList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlC;AACA,MAAMC,SAAS,GAAIC,KAAqB,IAAqB;EAC3D,MAAMC,GAAmE,GAAG,CAAC,CAAC;EAC9E,MAAMC,KAAqB,GAAG,EAAE;EAEhCF,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;IACpBH,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,GAAG;MAAE,GAAGD,IAAI;MAAEE,QAAQ,EAAE;IAAG,CAAC;EAC1C,CAAC,CAAC;EAEFN,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;IACpB,IAAIA,IAAI,CAACG,SAAS,EAAE;MAClBN,GAAG,CAACG,IAAI,CAACG,SAAS,CAAC,CAACD,QAAQ,CAACE,IAAI,CAACP,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC;IACjD,CAAC,MAAM;MACLH,KAAK,CAACM,IAAI,CAACP,GAAG,CAACG,IAAI,CAACC,EAAE,CAAC,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF,OAAOH,KAAK;AACd,CAAC;AAED,MAAMO,QAAiC,GAAGA,CAAC;EAAET,KAAK;EAAEU,KAAK;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EAC7F,MAAMC,SAAS,GAAGd,SAAS,CAACC,KAAK,CAAC;EAElC,MAAMc,WAAW,GAAId,KAAqB,IAAK;IAC7C,OAAOA,KAAK,CAACC,GAAG,CAAEG,IAAI,iBACpBN,OAAA;MAAmBiB,SAAS,EAAC,MAAM;MAAAT,QAAA,gBACjCR,OAAA,CAACF,QAAQ;QACPQ,IAAI,EAAEA,IAAK;QACXM,KAAK,EAAEA,CAAA,KAAMA,KAAK,CAACN,IAAI,CAAE;QACzBQ,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACR,IAAI,CAACC,EAAE,CAAE;QAC9CW,UAAU,EAAEL,aAAa,CAACP,IAAI,CAACC,EAAE,CAAC,IAAI;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EACDT,aAAa,CAACP,IAAI,CAACC,EAAE,CAAC,IAAID,IAAI,CAACE,QAAQ,CAACe,MAAM,GAAG,CAAC,IAAIP,WAAW,CAACV,IAAI,CAACE,QAAQ,CAAC;IAAA,GAPzEF,IAAI,CAACC,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN,CAAC;EACJ,CAAC;EAED,oBAAOtB,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAT,QAAA,EAAEQ,WAAW,CAACD,SAAS;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClE,CAAC;AAACE,EAAA,GAlBIb,QAAiC;AAoBvC,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}